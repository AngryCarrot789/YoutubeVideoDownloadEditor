<Window x:Class="YoutubeVideoDownloadEditor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:YoutubeVideoDownloadEditor" 
        xmlns:sliders="clr-namespace:YoutubeVideoDownloadEditor.Controls.Sliders"
        xmlns:Converters="clr-namespace:YoutubeVideoDownloadEditor.Converters"
        mc:Ignorable="d"
        Title="Youtube Video Downloader and Editor" 
        Height="650" Width="550"
        MinWidth="550" MinHeight="625"
        Style="{DynamicResource CustomWindowStyle}">
    <Window.Resources>
        <Converters:IsPlayingToStringConverter x:Key="IsPlayingToStringConverter"/>
        <Converters:SecondsToTimeConverter x:Key="SecondsToTimeConverter"/>
    </Window.Resources>
    <DockPanel Margin="5">
        <Expander IsExpanded="False" Header="Console" ExpandDirection="Up" DockPanel.Dock="Bottom">
            <TextBox TextChanged="console_TextChanged" Height="150" Margin="-1 4 -1 2" 
                     ScrollViewer.VerticalScrollBarVisibility="Visible"
                     ScrollViewer.HorizontalScrollBarVisibility="Visible"
                     Text="{Binding ConsoleText, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True"/>
        </Expander>
        <Grid>
            <GroupBox Header="Preferences" Height="125" VerticalAlignment="Top">
                <Grid>
                    <Label Content="Download URL" VerticalAlignment="Top" HorizontalAlignment="Left"/>
                    <TextBox Text="{Binding VideoPreferences.URLPath, UpdateSourceTrigger=PropertyChanged}" ToolTip="This can also be a file path. Click download on a file path and it will do stuff." Margin="93,0,67,0" Padding="4" VerticalAlignment="Top" HorizontalAlignment="Stretch" TextWrapping="NoWrap"/>
                    <Button Command="{Binding VideoPreferences.DownloadVideoCommand, Mode=OneTime}" Content="Download" Height="26" VerticalAlignment="Top" HorizontalAlignment="Right" Width="64"/>
                    <Label Content="Output Path" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0,29,0,0"/>
                    <TextBox Text="{Binding VideoPreferences.OutputPath, UpdateSourceTrigger=PropertyChanged}" ToolTip="For exporting audio files, just make the extension .mp3 or something" Margin="93,29,29,0" Padding="4" VerticalAlignment="Top" HorizontalAlignment="Stretch" TextWrapping="NoWrap"/>
                    <Button Command="{Binding VideoPreferences.BrowseOutputFileCommand, Mode=OneTime}" Content="..." Height="26" VerticalAlignment="Top" HorizontalAlignment="Right" Width="26" Margin="0,29,0,0"/>
                    <Label Content="Bitrate (B)" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0,58,0,0"/>
                    <TextBox Text="{Binding VideoPreferences.Bitrate, UpdateSourceTrigger=PropertyChanged}" ToolTip="The bit rate (in bits, not kb/mb/etc). 1000000 = 1MB bitrate. Set to 0 to use the automatic bitrate by ffmpeg" Margin="62,58,0,0" Padding="4" VerticalAlignment="Top" HorizontalAlignment="Left" TextWrapping="NoWrap" Width="100"/>
                    <Grid IsEnabled="{Binding VideoPreferences.FileDownloaded, UpdateSourceTrigger=PropertyChanged}" Margin="165,58,0,0">
                        <ProgressBar IsIndeterminate="{Binding VideoPreferences.IsDownloadingOrExporting, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,63,0"/>
                        <Button Command="{Binding ExportVideoCommand, Mode=OneTime}" Content="Export" HorizontalAlignment="Right" Width="60"/>
                    </Grid>
                </Grid>
            </GroupBox>
            <!-- IsEnabled="{Binding VideoPreferences.FileDownloaded, UpdateSourceTrigger=PropertyChanged}" -->
            <GroupBox Header="Editor" Margin="0,130,0,0">
                <Grid>
                    <MediaElement x:Name="Player" 
                        HorizontalAlignment="Stretch" 
                        VerticalAlignment="Stretch"
                        Margin="0,0,0,143"
                        LoadedBehavior="Manual"
                        UnloadedBehavior="Manual"
                        MediaOpened="Player_MediaOpened"
                        MediaEnded="Player_MediaEnded"
                        Volume="1"/>
                    <Grid Height="120" VerticalAlignment="Bottom">
                        <Border VerticalAlignment="Top" 
                            PreviewMouseDown="Slider_MouseDown" 
                            PreviewMouseUp="Slider_MouseUp"
                            Background="Transparent">
                            <Slider Value="{Binding Player.PlayerPosition, UpdateSourceTrigger=PropertyChanged}" 
                                Minimum="{Binding Player.PlayerSliderMinimum, UpdateSourceTrigger=PropertyChanged}" 
                                Maximum="{Binding Player.PlayerSliderMaximum, UpdateSourceTrigger=PropertyChanged}" 
                                ValueChanged="Slider_ValueChanged" 
                                LargeChange="1" 
                                SmallChange="0.1" 
                                TickFrequency="0.1"/>
                        </Border>
                        <sliders:RangeSlider LowerValue="{Binding RangeLower, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                             UpperValue="{Binding RangeUpper, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                             Minimum="{Binding RangeSliderMinimum, UpdateSourceTrigger=PropertyChanged}"
                                             Maximum="{Binding RangeSliderMaximum, UpdateSourceTrigger=PropertyChanged}" 
                                             Margin="0,25,0,65" ToolTip="Range slider. Used to select the start/end time for trimming the video duration."/>
                        <Grid Height="23" VerticalAlignment="Bottom" Margin="0,0,0,40">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Player Position:" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,4,0,3"/>
                            <TextBlock Text="{Binding Player.PlayerPosition, Converter={StaticResource SecondsToTimeConverter}, StringFormat=\{0:hh\} hrs \{0:mm\} mins \{0:ss\} secs, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Margin="85,4,4,3"/>
                            <TextBlock Text="Video Lendth:" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,4,0,3" Grid.Column="1"/>
                            <TextBlock Text="{Binding Player.PlayerDuration, Converter={StaticResource SecondsToTimeConverter}, StringFormat=\{0:hh\} hrs \{0:mm\} mins \{0:ss\} secs, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Margin="78,4,3,3" Grid.Column="1"/>
                        </Grid>
                        <Grid Height="20" VerticalAlignment="Bottom" Margin="0,0,0,20">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Start:" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,2"/>
                                <TextBlock Text="{Binding RangeLower, Converter={StaticResource SecondsToTimeConverter}, StringFormat=\{0:hh\} hrs \{0:mm\} mins \{0:ss\} secs, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Margin="32,2,2,2"/>
                                <TextBlock Text="End:" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,2" Grid.Column="1"/>
                                <TextBlock Text="{Binding RangeUpper, Converter={StaticResource SecondsToTimeConverter}, StringFormat=\{0:hh\} hrs \{0:mm\} mins \{0:ss\} secs, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Margin="28,2,0,2" Grid.Column="1"/>
                            </Grid>
                        </Grid>
                        <Grid Height="20" VerticalAlignment="Bottom">
                            <Grid DataContext="{Binding Player, Mode=OneTime}" HorizontalAlignment="Left" Width="140">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <Button Command="{Binding AutoPlayPauseCommand, Mode=OneTime}" Content="{Binding IsPlaying, Converter={StaticResource IsPlayingToStringConverter}}"/>
                                <Button Command="{Binding StopCommand, Mode=OneTime}" Content="Stop" Grid.Column="2"/>
                            </Grid>
                            <Separator Style="{DynamicResource VerticalSeparator}" Margin="145,0,0,0" HorizontalAlignment="Left"/>
                            <Grid Margin="152,0,0,0" HorizontalAlignment="Left" Width="45">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="4*"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="4*"/>
                                </Grid.ColumnDefinitions>
                                <Button Command="{Binding SetRangeLowerToPositionCommand, Mode=OneTime}" Margin="0,0,0,0" ToolTip="Move Lower Range to Player Position">
                                    <TextBlock Text="{}{" Margin="0 -2 0 0"/>
                                </Button>
                                <Button Command="{Binding SetRangeUpperToPositionCommand, Mode=OneTime}" ToolTip="Move Upper Range to Player Position" Grid.Column="2">
                                    <TextBlock Text="}" Margin="0 -2 0 0"/>
                                </Button>
                            </Grid>
                            <CheckBox IsChecked="{Binding IsMuted, ElementName=Player, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Content="Is Muted" HorizontalAlignment="Right" Width="75" Margin="0,0,116,0"/>
                            <Slider Value="{Binding Volume, ElementName=Player, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Minimum="0" Maximum="1" HorizontalAlignment="Right" Width="111" TickFrequency="0.01" SmallChange="0.01" LargeChange="0.1"/>
                        </Grid>
                    </Grid>
                </Grid>
            </GroupBox>
        </Grid>
    </DockPanel>
</Window>
